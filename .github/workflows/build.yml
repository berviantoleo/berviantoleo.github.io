name: Build Site
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Yarn Install
        run: yarn --frozen-lockfile
      - name: Typecheck
        run: yarn typecheck
      - name: Yarn build and copy CNAME
        run: |
          yarn build
          cp CNAME build/CNAME
      - name: Deploy ðŸš€
        if: ${{ github.event_name == 'push' && matrix.node-version == '18.x'}}
        uses: JamesIves/github-pages-deploy-action@v4.6.4
        with:
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: build # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch
  docker-build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Build Image
        run: docker build . -t personal-blog
      - name: Run the Custom docker and test
        run: |
          docker run --name personal-blog -d -p 80:80 personal-blog nginx -g 'daemon off;'
          docker ps -a
          sleep 10
          curl --connect-timeout 10 \
            --max-time 100 \
            --retry 5 \
            --retry-delay 5 \
            --retry-max-time 150 \
            'http://localhost'
          docker stop personal-blog
          docker rm personal-blog
  docker-push:
    runs-on: ubuntu-22.04
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            berviantoleo/${{ env.IMAGE_NAME }}
            ghcr.io/${{ github.repository }}
        env:
          IMAGE_NAME: berv-blog
      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

